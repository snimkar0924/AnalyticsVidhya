{
    "collab_server" : "",
    "contents" : "\n\n#read data \nloandata<-read.csv('./data/train_u6lujuX.csv')\nsummary(loandata)\n\n# there are missing values in the data\n# note: missing values for:\n# 1. loan amount\n# 2. loan amount term\n# 3. credit history check done or not\n# let us first ignore these variables for our model (part A)\n# and consider these later (part B)\n\n#### A ######\n# the data file has been transformed to add dummy variables for regression\n# and saved as train.csv - use this for part A\nloandata_A<-read.csv('./data/train.csv')\nsummary(loandata_A)\ncolnames(loandata_A)\n\n##split the training dataset into training and validation data\n## \nN<-nrow(loandata_A)\nR<-round(N*0.65)\nN-R\n# trngData<-loandata_A[1:R,]\n# valdtnData<-loandata_A[(R+1):N,]\ntrngData<-loandata_A[(N-R+1):N,]\nvaldtnData<-loandata_A[1:(N-R),]\n\n\n##check for missing data\n#check training set\nmd.pattern(trngData)\nmice_plot1 <- aggr(trngData, col=c('navyblue','yellow'),\n                   numbers=TRUE, sortVars=TRUE,\n                   labels=names(trngData), cex.axis=.7,\n                   gap=3, ylab=c(\"Missing data\",\"Pattern\"))\n\n#check validation set\nmd.pattern(valdtnData)\nmice_plot2 <- aggr(valdtnData, col=c('navyblue','yellow'),\n                   numbers=TRUE, sortVars=TRUE,\n                   labels=names(valdtnData), cex.axis=.7,\n                   gap=3, ylab=c(\"Missing data\",\"Pattern\"))\n\nmodel1<-glm(formula = trngData$d_loan_status\n                     ~trngData$d_gender\n                     +trngData$d_married\n                     +trngData$d_dependents\n                     +trngData$d_education\n                     +trngData$d_self_employed\n                     +trngData$ApplicantIncome\n                     +trngData$CoapplicantIncome\n                     +trngData$d_urban\n                     +trngData$d_rural-1,\n                      data=trngData, family=\"binomial\")\nsummary(model1)\n\nmodel2<-glm(formula = trngData$d_loan_status\n                    ~trngData$d_married\n                    +trngData$d_education\n                    +trngData$d_urban-1,\n                    data=trngData, family=\"binomial\")\nsummary(model2)\n\nmodel3<-glm(formula = trngData$d_loan_status\n            ~trngData$d_married\n            +trngData$d_education\n            +trngData$d_urban\n            +trngData$d_rural-1,\n            data=trngData, family=\"binomial\")\nsummary(model3)\n\n\n###choose model3\n##build logit model\ncfs<-coef(model3)\n\nbmodel<-1/(1+exp(-1*(cfs[1]*valdtnData$d_married\n                     +cfs[2]*valdtnData$d_education\n                     +cfs[2]*valdtnData$d_urban\n                     +cfs[3]*valdtnData$d_rural)))\n\nlength(bmodel)\nhead(bmodel, n=20)\nplot(bmodel)\n\nactual<-valdtnData$d_loan_status\nlength(actual[actual==1])\nlength(actual[actual==0])\nhead(actual, n=20)\nplot(actual)\n\nthreshold<-0.6\npredicted<-c()\npredicted[bmodel>threshold]<-1\npredicted[bmodel<=threshold]<-0\nlength(predicted[predicted==1])\nlength(predicted[predicted==0])\nhead(predicted, n=20)\nplot(predicted, col='blue')\npoints(actual, col='red')\n\ndf<-cbind.data.frame(actual, predicted)\ncolnames(df)<-c('survived','pred')\nhead(df)\nwrite.csv(df,'./data/bmodel.csv')\n\n\nlibrary(pROC)\nauc(actual, predicted)\n\n\nroc <- calculate_roc(df, 1, 2, n = 100)\nhead(roc)\nplot_roc(roc, 0.6, 1, 2)\n\n\n# ROC & AUC for model evaluation\n# http://www.r-bloggers.com/illustrated-guide-to-roc-and-auc/\n\n\n\n\n\n\n\n\n#### B ######\n##impute the missing data\nlibrary(mice)\nlibrary(VIM)\n\nmd.pattern(loandata)\n#get rid of credit_history - causing imputation issues\nloandata<-loandata[,-11]\nsummary(loandata)\n\nmice_plot <- aggr(loandata, col=c('navyblue','yellow'),\n                  numbers=TRUE, sortVars=TRUE,\n                  labels=names(loandata), cex.axis=.7,\n                  gap=3, ylab=c(\"Missing data\",\"Pattern\"))\n\nimputed_loan_data <- mice(loandata, m=5, maxit = 50, \n                     method = 'pmm', seed = 500)\nsummary(imputed_loan_data)\nstr(imputed_loan_data)\n\n#ERROR!!!!\n# iter imp variable\n# 1   1  LoanAmount  Loan_Amount_Term  Credit_History\n# 1   2  LoanAmount  Loan_Amount_Term  Credit_History\n# 1   3  LoanAmount  Loan_Amount_Term  Credit_History\n# 1   4  LoanAmount  Loan_Amount_Term  Credit_History\n# 1   5  LoanAmount\n# Error in solve.default(xtx + diag(pen)) : \n#   system is computationally singular: \n#   reciprocal condition number = 1.36303e-16\n\n# write.table(imputed_loan_data,\"./data/train_imputed.txt\")\n\n\n\n\n\n\n",
    "created" : 1458391885643.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "1936997249",
    "id" : "7AC1A67A",
    "lastKnownWriteTime" : 1458408749,
    "last_content_update" : 1458408749694,
    "path" : "D:/GIT_REPOS/AnalyticsVidhya/LoanPrediction2/predictor.R",
    "project_path" : "predictor.R",
    "properties" : {
        "tempName" : "Untitled1"
    },
    "relative_order" : 1,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}